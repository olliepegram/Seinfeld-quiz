{"ast":null,"code":"var _jsxFileName = \"/Users/ollie/Desktop/apps/react-redux/seinfeld-quiz/src/components/Quotes.js\";\nimport React, { Component } from 'react';\nimport './Quotes.css';\n\nclass Quotes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.listRef = React.createRef();\n\n    this.randColor = array => {\n      var copy = array.slice(0);\n      return function () {\n        if (copy.length < 1) {\n          copy = array.slice(0);\n        }\n\n        var index = Math.floor(Math.random() * copy.length);\n        var item = copy[index];\n        copy.splice(index, 1);\n        return item;\n      };\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.gameWon) {\n      this.props.quotes.map(quote => {\n        return React.createElement(\"li\", {\n          key: quote.id,\n          className: \"SingleQuote\",\n          style: {\n            backgroundColor: this.listRef.current.style.backgroundColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"quote\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, quote.quote), React.createElement(\"div\", {\n          className: \"quote-about\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"quote-season\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Season: \", quote.season), React.createElement(\"span\", {\n          className: \"quote-episode\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Quote: \", quote.episode)));\n      });\n    }\n  }\n\n  render() {\n    const colors = this.randColor(['#EEAF00', '#01A7B7', '#DE4B43', '#FCA080', '#FF7E57', '#3C3642', '#85496F', '#5D9B84']);\n    return React.createElement(\"div\", {\n      className: \"QuoteContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"AllQuotes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.props.quotes.map(quote => React.createElement(\"li\", {\n      key: quote.id,\n      className: \"SingleQuote\",\n      style: {\n        backgroundColor: colors()\n      },\n      onClick: () => this.props.handleChoice(quote.id),\n      ref: this.listRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"quote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, quote.quote), React.createElement(\"div\", {\n      className: \"quote-about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"quote-season\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Season: \", quote.season), React.createElement(\"span\", {\n      className: \"quote-episode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Quote: \", quote.episode))))));\n  }\n\n}\n\nexport default Quotes;","map":{"version":3,"sources":["/Users/ollie/Desktop/apps/react-redux/seinfeld-quiz/src/components/Quotes.js"],"names":["React","Component","Quotes","listRef","createRef","randColor","array","copy","slice","length","index","Math","floor","random","item","splice","componentDidUpdate","props","gameWon","quotes","map","quote","id","backgroundColor","current","style","season","episode","render","colors","handleChoice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Quotes.css';\n\nclass Quotes extends Component {\n    listRef = React.createRef();\n    randColor = array => {\n        var copy = array.slice(0);\n        return function() {\n            if (copy.length < 1) {\n                copy = array.slice(0);\n            }\n            var index = Math.floor(Math.random() * copy.length);\n            var item = copy[index];\n            copy.splice(index, 1);\n            return item;\n        };\n    };\n\n    componentDidUpdate() {\n        if (this.props.gameWon) {\n            this.props.quotes.map(quote => {\n                return (\n                    <li\n                        key={quote.id}\n                        className='SingleQuote'\n                        style={{\n                            backgroundColor: this.listRef.current.style\n                                .backgroundColor\n                        }}\n                    >\n                        <h3 className='quote'>{quote.quote}</h3>\n                        <div className='quote-about'>\n                            <span className='quote-season'>\n                                Season: {quote.season}\n                            </span>\n                            <span className='quote-episode'>\n                                Quote: {quote.episode}\n                            </span>\n                        </div>\n                    </li>\n                );\n            });\n        }\n    }\n\n    render() {\n        const colors = this.randColor([\n            '#EEAF00',\n            '#01A7B7',\n            '#DE4B43',\n            '#FCA080',\n            '#FF7E57',\n            '#3C3642',\n            '#85496F',\n            '#5D9B84'\n        ]);\n        return (\n            <div className='QuoteContainer'>\n                <ul className='AllQuotes'>\n                    {this.props.quotes.map(quote => (\n                        <li\n                            key={quote.id}\n                            className='SingleQuote'\n                            style={{\n                                backgroundColor: colors()\n                            }}\n                            onClick={() => this.props.handleChoice(quote.id)}\n                            ref={this.listRef}\n                        >\n                            <h3 className='quote'>{quote.quote}</h3>\n                            <div className='quote-about'>\n                                <span className='quote-season'>\n                                    Season: {quote.season}\n                                </span>\n                                <span className='quote-episode'>\n                                    Quote: {quote.episode}\n                                </span>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Quotes;\n"]},"metadata":{},"sourceType":"module"}