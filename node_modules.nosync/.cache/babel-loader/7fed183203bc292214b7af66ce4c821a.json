{"ast":null,"code":"var _jsxFileName = \"/Users/ollie/Desktop/apps/react-redux/seinfeld-quiz/src/components/Quotes.js\";\nimport React, { Component } from 'react'; // import styled from 'styled-components';\n\nimport './Quotes.css';\n\nclass Quotes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.listRef = React.createRef();\n  }\n\n  render() {\n    if (this.props.gameWon) {\n      return React.createElement(\"div\", {\n        className: \"QuoteContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"AllQuotes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, this.props.quotes.map(quote => React.createElement(\"li\", {\n        key: quote.id,\n        className: \"SingleQuote\",\n        style: {\n          backgroundColor: this.props.author.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"quote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.props.author.quote), React.createElement(\"div\", {\n        className: \"quote-about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"quote-season\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Season: \", this.props.author.season), React.createElement(\"span\", {\n        className: \"quote-episode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Episode: \", this.props.author.episode))))));\n    } else if (this.props.gameWon === false) {\n      return React.createElement(\"div\", {\n        className: \"QuoteContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"AllQuotes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.props.quotes.map(quote => React.createElement(\"li\", {\n        key: quote.id,\n        className: \"SingleQuote\",\n        style: {\n          backgroundColor: quote.color\n        },\n        onClick: () => this.props.handleChoice(quote.id),\n        ref: this.listRef,\n        onMouseOver: this.handleHover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"quote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, quote.quote), React.createElement(\"div\", {\n        className: \"quote-about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"quote-season\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Season: \", quote.season), React.createElement(\"span\", {\n        className: \"quote-episode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Episode: \", quote.episode))))));\n    }\n  }\n\n}\n\nexport default Quotes;","map":{"version":3,"sources":["/Users/ollie/Desktop/apps/react-redux/seinfeld-quiz/src/components/Quotes.js"],"names":["React","Component","Quotes","listRef","createRef","render","props","gameWon","quotes","map","quote","id","backgroundColor","author","color","season","episode","handleChoice","handleHover"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BE,OAD2B,GACjBH,KAAK,CAACI,SAAN,EADiB;AAAA;;AAG3BC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACpB,aACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWE,MAAX,CAAkBC,GAAlB,CAAsBC,KAAK,IACxB;AACI,QAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,QAAA,SAAS,EAAC,aAFd;AAGI,QAAA,KAAK,EAAE;AACHC,UAAAA,eAAe,EAAE,KAAKN,KAAL,CAAWO,MAAX,CAAkBC;AADhC,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKR,KAAL,CAAWO,MAAX,CAAkBH,KADvB,CAPJ,EAUI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACa,KAAKJ,KAAL,CAAWO,MAAX,CAAkBE,MAD/B,CADJ,EAII;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACc,KAAKT,KAAL,CAAWO,MAAX,CAAkBG,OADhC,CAJJ,CAVJ,CADH,CADL,CADJ,CADJ;AA2BH,KA5BD,MA4BO,IAAI,KAAKV,KAAL,CAAWC,OAAX,KAAuB,KAA3B,EAAkC;AACrC,aACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWE,MAAX,CAAkBC,GAAlB,CAAsBC,KAAK,IACxB;AACI,QAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,QAAA,SAAS,EAAC,aAFd;AAGI,QAAA,KAAK,EAAE;AACHC,UAAAA,eAAe,EAAEF,KAAK,CAACI;AADpB,SAHX;AAMI,QAAA,OAAO,EAAE,MACL,KAAKR,KAAL,CAAWW,YAAX,CAAwBP,KAAK,CAACC,EAA9B,CAPR;AASI,QAAA,GAAG,EAAE,KAAKR,OATd;AAUI,QAAA,WAAW,EAAE,KAAKe,WAVtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBR,KAAK,CAACA,KAA7B,CAZJ,EAaI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaA,KAAK,CAACK,MADnB,CADJ,EAII;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACcL,KAAK,CAACM,OADpB,CAJJ,CAbJ,CADH,CADL,CADJ,CADJ;AA8BH;AACJ;;AAhE0B;;AAmE/B,eAAed,MAAf","sourcesContent":["import React, { Component } from 'react';\n// import styled from 'styled-components';\nimport './Quotes.css';\n\nclass Quotes extends Component {\n    listRef = React.createRef();\n\n    render() {\n        if (this.props.gameWon) {\n            return (\n                <div className='QuoteContainer'>\n                    <ul className='AllQuotes'>\n                        {this.props.quotes.map(quote => (\n                            <li\n                                key={quote.id}\n                                className='SingleQuote'\n                                style={{\n                                    backgroundColor: this.props.author.color\n                                }}\n                            >\n                                <h3 className='quote'>\n                                    {this.props.author.quote}\n                                </h3>\n                                <div className='quote-about'>\n                                    <span className='quote-season'>\n                                        Season: {this.props.author.season}\n                                    </span>\n                                    <span className='quote-episode'>\n                                        Episode: {this.props.author.episode}\n                                    </span>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            );\n        } else if (this.props.gameWon === false) {\n            return (\n                <div className='QuoteContainer'>\n                    <ul className='AllQuotes'>\n                        {this.props.quotes.map(quote => (\n                            <li\n                                key={quote.id}\n                                className='SingleQuote'\n                                style={{\n                                    backgroundColor: quote.color\n                                }}\n                                onClick={() =>\n                                    this.props.handleChoice(quote.id)\n                                }\n                                ref={this.listRef}\n                                onMouseOver={this.handleHover}\n                            >\n                                <h3 className='quote'>{quote.quote}</h3>\n                                <div className='quote-about'>\n                                    <span className='quote-season'>\n                                        Season: {quote.season}\n                                    </span>\n                                    <span className='quote-episode'>\n                                        Episode: {quote.episode}\n                                    </span>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Quotes;\n"]},"metadata":{},"sourceType":"module"}