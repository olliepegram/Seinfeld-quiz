{"ast":null,"code":"var _jsxFileName = \"/Users/ollie/Desktop/apps/react-redux/seinfeld-quiz/src/components/Quotes.js\";\nimport React, { Component } from 'react';\nimport './Quotes.css';\n\nclass Quotes extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.randColor = array => {\n      var copy = array.slice(0);\n      return function () {\n        if (copy.length < 1) {\n          copy = array.slice(0);\n        }\n\n        var index = Math.floor(Math.random() * copy.length);\n        var item = copy[index];\n        copy.splice(index, 1);\n        return item;\n      };\n    };\n\n    this.handleChoice = () => {\n      this.props.handleChoice();\n    };\n  }\n\n  render() {\n    const colors = this.randColor(['#EEAF00', '#01A7B7', '#DE4B43', '#FCA080', '#FF7E57', '#3C3642', '#85496F', '#5D9B84']);\n    return React.createElement(\"div\", {\n      className: \"QuoteContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"AllQuotes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.quotes.map(quote => React.createElement(\"li\", {\n      key: quote.id,\n      className: \"SingleQuote\",\n      style: {\n        backgroundColor: colors()\n      },\n      onClick: this.handleChoice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"quote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, quote.quote), React.createElement(\"div\", {\n      className: \"quote-about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"quote-season\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Season: \", quote.season), React.createElement(\"span\", {\n      className: \"quote-episode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Quote: \", quote.episode))))));\n  }\n\n}\n\nexport default Quotes;","map":{"version":3,"sources":["/Users/ollie/Desktop/apps/react-redux/seinfeld-quiz/src/components/Quotes.js"],"names":["React","Component","Quotes","randColor","array","copy","slice","length","index","Math","floor","random","item","splice","handleChoice","props","render","colors","quotes","map","quote","id","backgroundColor","season","episode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC3BE,SAD2B,GACfC,KAAK,IAAI;AACjB,UAAIC,IAAI,GAAGD,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAX;AACA,aAAO,YAAW;AACd,YAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACjBF,UAAAA,IAAI,GAAGD,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAP;AACH;;AACD,YAAIE,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,IAAI,CAACE,MAAhC,CAAZ;AACA,YAAIK,IAAI,GAAGP,IAAI,CAACG,KAAD,CAAf;AACAH,QAAAA,IAAI,CAACQ,MAAL,CAAYL,KAAZ,EAAmB,CAAnB;AACA,eAAOI,IAAP;AACH,OARD;AASH,KAZ0B;;AAAA,SAc3BE,YAd2B,GAcZ,MAAM;AACjB,WAAKC,KAAL,CAAWD,YAAX;AACH,KAhB0B;AAAA;;AAkB3BE,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG,KAAKd,SAAL,CAAe,CAC1B,SAD0B,EAE1B,SAF0B,EAG1B,SAH0B,EAI1B,SAJ0B,EAK1B,SAL0B,EAM1B,SAN0B,EAO1B,SAP0B,EAQ1B,SAR0B,CAAf,CAAf;AAUA,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKY,KAAL,CAAWG,MAAX,CAAkBC,GAAlB,CAAsBC,KAAK,IACxB;AACI,MAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,MAAA,SAAS,EAAC,aAFd;AAGI,MAAA,KAAK,EAAE;AACHC,QAAAA,eAAe,EAAEL,MAAM;AADpB,OAHX;AAMI,MAAA,OAAO,EAAE,KAAKH,YANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBM,KAAK,CAACA,KAA7B,CARJ,EASI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaA,KAAK,CAACG,MADnB,CADJ,EAII;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACYH,KAAK,CAACI,OADlB,CAJJ,CATJ,CADH,CADL,CADJ,CADJ;AA0BH;;AAvD0B;;AA0D/B,eAAetB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Quotes.css';\n\nclass Quotes extends Component {\n    randColor = array => {\n        var copy = array.slice(0);\n        return function() {\n            if (copy.length < 1) {\n                copy = array.slice(0);\n            }\n            var index = Math.floor(Math.random() * copy.length);\n            var item = copy[index];\n            copy.splice(index, 1);\n            return item;\n        };\n    };\n\n    handleChoice = () => {\n        this.props.handleChoice();\n    };\n\n    render() {\n        const colors = this.randColor([\n            '#EEAF00',\n            '#01A7B7',\n            '#DE4B43',\n            '#FCA080',\n            '#FF7E57',\n            '#3C3642',\n            '#85496F',\n            '#5D9B84'\n        ]);\n        return (\n            <div className='QuoteContainer'>\n                <ul className='AllQuotes'>\n                    {this.props.quotes.map(quote => (\n                        <li\n                            key={quote.id}\n                            className='SingleQuote'\n                            style={{\n                                backgroundColor: colors()\n                            }}\n                            onClick={this.handleChoice}\n                        >\n                            <h3 className='quote'>{quote.quote}</h3>\n                            <div className='quote-about'>\n                                <span className='quote-season'>\n                                    Season: {quote.season}\n                                </span>\n                                <span className='quote-episode'>\n                                    Quote: {quote.episode}\n                                </span>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Quotes;\n"]},"metadata":{},"sourceType":"module"}